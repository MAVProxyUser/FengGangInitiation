diff --git a/Firmware/_daq_core/Makefile b/Firmware/_daq_core/Makefile
index 8b779e1..e6cb961 100644
--- a/Firmware/_daq_core/Makefile
+++ b/Firmware/_daq_core/Makefile
@@ -28,7 +28,7 @@ daq_util:
 	$(CC) $(CFLAGS) -c -o sh_mem_util.o sh_mem_util.c
 
 rtl_daq: iq_header.c log.c ini.c rtl_daq.c rtl_daq.h
-	$(CC) $(CFLAGS) log.o ini.o iq_header.o -o rtl_daq.out rtl_daq.c -lpthread -lzmq $(PIGPIO) -L. -lrtlsdr -lusb-1.0
+	$(CC) $(CFLAGS) log.o ini.o iq_header.o -o rtl_daq.out rtl_daq.c -lpthread -lzmq $(PIGPIO) -L.  -Wl,-Bstatic -lrtlsdr -Wl,-Bdynamic -lusb-1.0
 
 rebuffer: sh_mem_util.c iq_header.c log.c ini.c rebuffer.c rtl_daq.h
 	$(CC) $(CFLAGS) sh_mem_util.o log.o ini.o iq_header.o -o rebuffer.out rebuffer.c -lrt -lm
diff --git a/Firmware/_logs/logs b/Firmware/_logs/logs
deleted file mode 100644
index ade1a56..0000000
--- a/Firmware/_logs/logs
+++ /dev/null
@@ -1,8 +0,0 @@
-Realtek data acquistion module : rtl_daq.log
-Sample delay synchronizer      : sync.log
-Sample rebuffer                : rebuffer.log
-Squelch module                 : squelch.log
-IQ sample decimator            : decimator.log
-Delay synchronizer module      : delay_sync.log
-IQ Server                      : iq_server.log
-Hardware controller module     : hwc.log
diff --git a/Firmware/daq_chain_config.ini b/Firmware/daq_chain_config.ini
index 7c341ba..a8c4a12 100755
--- a/Firmware/daq_chain_config.ini
+++ b/Firmware/daq_chain_config.ini
@@ -51,5 +51,5 @@ adpis_proc_size = 8192
 adpis_gains_init = 0,0,0,0,0
 
 [data_interface]
-out_data_iface_type = shmem
+out_data_iface_type = eth
 
diff --git a/Firmware/daq_start_sm.sh b/Firmware/daq_start_sm.sh
index 925440c..f9fe7c6 100755
--- a/Firmware/daq_start_sm.sh
+++ b/Firmware/daq_start_sm.sh
@@ -100,23 +100,23 @@ fi
 
 # Start main program chain -Thread 0 Normal (non squelch mode)
 echo "Starting DAQ Subsystem"
-chrt -f 99 _daq_core/rtl_daq.out 2> _logs/rtl_daq.log | \
-chrt -f 99 _daq_core/rebuffer.out 0 2> _logs/rebuffer.log &
+sudo chrt -f 99 _daq_core/rtl_daq.out 2> _logs/rtl_daq.log | \
+sudo chrt -f 99 _daq_core/rebuffer.out 0 2> _logs/rebuffer.log &
 
 # Decimator - Thread 1
-chrt -f 99 _daq_core/decimate.out 2> _logs/decimator.log &
+sudo chrt -f 99 _daq_core/decimate.out 2> _logs/decimator.log &
 
 # Delay synchronizer - Thread 2
-chrt -f 99 python3 _daq_core/delay_sync.py 2> _logs/delay_sync.log &
+sudo chrt -f 99 python3 _daq_core/delay_sync.py 2> _logs/delay_sync.log &
 
 # Hardware Controller data path - Thread 3
-chrt -f 99 sudo env "PATH=$PATH" python3 _daq_core/hw_controller.py 2> _logs/hwc.log &
+sudo chrt -f 99 sudo env "PATH=$PATH" python3 _daq_core/hw_controller.py 2> _logs/hwc.log &
 # root priviliges are needed to drive the i2c master
 
-if [ $out_data_iface_type = eth ]; then
+if [ "$out_data_iface_type" = "eth" ]; then
     echo "Output data interface: IQ ethernet server"
-    chrt -f 99 _daq_core/iq_server.out 2>_logs/iq_server.log &
-elif [ $out_data_iface_type = shmem ]; then
+    sudo chrt -f 99 _daq_core/iq_server.out 2>_logs/iq_server.log &
+elif [ "$out_data_iface_type" = "shmem" ]; then
     echo "Output data interface: Shared memory"
 fi
 
diff --git a/config_files/kerberos_default/daq_chain_config.ini b/config_files/kerberos_default/daq_chain_config.ini
deleted file mode 100755
index 6820bf6..0000000
--- a/config_files/kerberos_default/daq_chain_config.ini
+++ /dev/null
@@ -1,56 +0,0 @@
-[meta]
-ini_version = 7
-config_name = kerberos_default
-
-[hw]
-name = kraken5
-unit_id = 0
-ioo_type = 0
-num_ch = 4
-en_bias_tee = 0,0,0,0
-
-[daq]
-log_level = 5
-daq_buffer_size = 262144
-center_freq = 700000000
-sample_rate = 2400000
-gain = 0
-en_noise_source_ctr = 1
-ctr_channel_serial_no = 1000
-
-[pre_processing]
-cpi_size = 1048576
-decimation_ratio = 1
-fir_relative_bandwidth = 1.0
-fir_tap_size = 1
-fir_window = hann
-en_filter_reset = 0
-
-[calibration]
-corr_size = 65536
-std_ch_ind = 0
-en_iq_cal = 1
-amplitude_cal_mode = channel_power
-en_gain_tune_init = 0
-gain_lock_interval = 0
-unified_gain_control = 0
-require_track_lock_intervention = 0
-cal_track_mode = 0
-cal_frame_interval = 687
-cal_frame_burst_size = 10
-amplitude_tolerance = 2
-phase_tolerance = 1
-maximum_sync_fails = 10
-iq_adjust_source = explicit-time-delay
-iq_adjust_amplitude = 0,0,0,0
-iq_adjust_time_delay_ns = 0, 0, 0, 0
-
-
-[adpis]
-en_adpis = 0
-adpis_proc_size = 8192
-adpis_gains_init = 0,0,0,0
-
-[data_interface]
-out_data_iface_type = shmem
-
diff --git a/config_files/kraken_default/daq_chain_config.ini b/config_files/kraken_default/daq_chain_config.ini
index 7c341ba..a8c4a12 100755
--- a/config_files/kraken_default/daq_chain_config.ini
+++ b/config_files/kraken_default/daq_chain_config.ini
@@ -51,5 +51,5 @@ adpis_proc_size = 8192
 adpis_gains_init = 0,0,0,0,0
 
 [data_interface]
-out_data_iface_type = shmem
+out_data_iface_type = eth
 
diff --git a/util/install.sh b/util/install.sh
index 18e81be..74c07d1 100755
--- a/util/install.sh
+++ b/util/install.sh
@@ -1,63 +1,84 @@
-#!/bin/bash
-echo "Installing dependencies and build HeIMDALL DAQ Firmware"
-cd ..
-cd ..
-sudo apt install git
-echo "6/1 Install build dependencies for the realtek driver"
-sudo apt install cmake
-sudo apt install libusb-1.0-0-dev
-echo "6/2 Build and install rtl-sdr driver"
-git clone https://github.com/krakenrf/librtlsdr
-
-cd librtlsdr
-mkdir build
-cd build
-cmake ../ -DINSTALL_UDEV_RULES=ON
-make
-sudo make install
-sudo cp ../rtl-sdr.rules /etc/udev/rules.d/
-sudo ldconfig
-cd ..
-cd ..
-
-echo "6/3 Disable built-in rtl-sdr driver"
-echo 'blacklist dvb_usb_rtl28xxu' | sudo tee --append /etc/modprobe.d/blacklist-dvb_usb_rtl28xxu.conf
-echo "6/4 Install SIMD FIR filter DSP library"
-
-HOST_ARCH=$(uname -m)
-if [ "$HOST_ARCH" = "x86_64" ]; then
-    echo "X86 64 platform."
-elif [ "$HOST_ARCH" = "armv7l" ]; then
-    git clone https://github.com/projectNe10/Ne10
-    cd Ne10
-    mkdir build
-    cd build
-    export NE10_LINUX_TARGET_ARCH=armv7 
-    cmake -DGNULINUX_PLATFORM=ON ..     
-    make
-    cp modules/libNE10.a ../../heimdall_daq_fw/Firmware/_daq_core
-    cd ..
-    cd ..    
+#!/usr/bin/env bash
+set -e
+
+echo "Installing dependencies and building Heimdall DAQ Firmware"
+
+# Resolve project root
+SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
+PROJECT_ROOT="$SCRIPT_DIR/.."
+cd "$PROJECT_ROOT"
+
+# 6/1 RTL-SDR deps (system packages)
+echo "6/1 Installing RTL-SDR build dependencies"
+sudo apt update
+sudo apt install -y \
+  git cmake libusb-1.0-0-dev lsof \
+  rtl-sdr librtlsdr0 librtlsdr-dev
+
+# 6/2 Build KrakenRF-patched librtlsdr (static only)
+echo "6/2 Building KrakenRF-patched librtlsdr (static archive)"
+rm -rf kraken-librtlsdr
+git clone --depth 1 https://github.com/krakenrf/librtlsdr kraken-librtlsdr
+cd kraken-librtlsdr
+mkdir -p build && cd build
+cmake ../ \
+  -DBUILD_SHARED_LIBS=OFF \
+  -DINSTALL_UDEV_RULES=OFF
+make -j$(nproc)
+
+echo "→ Installing patched librtlsdr.a and headers into DAQ core"
+# Copy the static archive under the proper name for -lrtlsdr
+cp src/librtlsdr.a \
+   "$PROJECT_ROOT/Firmware/_daq_core/librtlsdr.a"
+# Copy all headers so the DAQ code sees the new prototypes
+for hdr in ../include/*.h; do
+    cp "$hdr" "$PROJECT_ROOT/Firmware/_daq_core/"
+done
+
+cd "$PROJECT_ROOT"
+
+# Patch the DAQ Makefile to force it to pick our local librtlsdr.a
+echo "→ Patching DAQ core Makefile for static librtlsdr"
+sed -i \
+  's|\(-L\.\s*-\)lrtlsdr|\1Wl,-Bstatic -lrtlsdr -Wl,-Bdynamic|' \
+  "$PROJECT_ROOT/Firmware/_daq_core/Makefile"
+
+# 6/3 Blacklist stock DVB-USB driver
+echo "6/3 Blacklisting dvb_usb_rtl28xxu"
+echo 'blacklist dvb_usb_rtl28xxu' | sudo tee /etc/modprobe.d/blacklist-dvb_usb_rtl28xxu.conf
+
+# 6/4 Install or copy NE10 (for SIMD FIR)
+echo "6/4 Installing or copying NE10 DSP library"
+HOST_ARCH="$(uname -m)"
+if [ "$HOST_ARCH" = "armv7l" ]; then
+  echo "  armv7l: building NE10 from source"
+  rm -rf ne10-src
+  git clone --depth 1 https://github.com/projectNe10/Ne10 ne10-src
+  cd ne10-src/build
+  export NE10_LINUX_TARGET_ARCH=armv7
+  cmake -DGNULINUX_PLATFORM=ON ..
+  make -j$(nproc)
+  sudo cp modules/libNE10.a "$PROJECT_ROOT/Firmware/_daq_core/"
+  cd "$PROJECT_ROOT"
+elif [ "$HOST_ARCH" = "aarch64" ]; then
+  echo "  aarch64: copying system NE10"
+  sudo cp /usr/lib/aarch64-linux-gnu/libNE10.a "$PROJECT_ROOT/Firmware/_daq_core/"
 else
-    echo "Architecture not recognized!"
-    exit
+  echo "  $HOST_ARCH: assuming system NE10 or skipping"
 fi
-echo "6/5 Install the required python3 packages"
-sudo apt install python3-pip
-sudo python3 -m pip install numpy
-sudo python3 -m pip install configparser
-sudo apt-get install libatlas-base-dev gfortran
-sudo python3 -m pip install scipy
-sudo python3 -m pip install pyzmq
-sudo python3 -m pip install scikit-rf
-# For testing
-sudo python3 -m pip install plotly
-
-
-sudo apt install libzmq3-dev -y
-echo "6/6 Build HeIMDALL DAQ Firmware"
-cd heimdall_daq_fw/Firmware/_daq_core
+
+# 6/5 Python dependencies
+echo "6/5 Installing Python3 packages"
+sudo apt install -y python3-pip libatlas-base-dev gfortran
+pip3 install --upgrade pip
+pip3 install numpy scipy pyzmq scikit-rf plotly configparser
+
+# 6/6 Build Heimdall DAQ core firmware
+echo "6/6 Building Heimdall DAQ core"
+cd "$PROJECT_ROOT/Firmware/_daq_core"
+make clean
 make
+cd "$PROJECT_ROOT"
 
-# TODO: Check installed versions:
-# Scipy: 1.8 or later
\ No newline at end of file
+echo "✅ Done! Now start Heimdall with:"
+echo "   cd Firmware && sudo ./daq_start_sm.sh"
